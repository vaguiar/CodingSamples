public class QuickSortComparisons {

	private static long comparison_count = 0;

	public long getComparison_count() {
		return this.comparison_count;
	}

	public void sortAndCalculateComparisons(int[] input, int type) {

		switch (type) {
		// Case: select 1st element of array as pivot.
		case 1:
			comparison_count = 0;
			sortWithPivotFirst(input);
			break;

		// Case: select last element of array as pivot.
		case 2:
			comparison_count = 0;
			sortWithPivotLast(input);
			break;

		// Case: select median of 1st, middle and last elements as pivot
		case 3:
			comparison_count = 0;
			sortWithPivotMedian(input);
			break;
		}
	}
	
	private void sortWithPivotFirst(){
		
	}
	
	private void sortWithPivotLast(){
		
	}
	
	private void sortWithPivotMedian(){
		
	}
	
	private void quickSort(int [] arr, int left, int right){
		int pivot_pos = partitionAtPivot(arr);
	}
	
	private int partitionAtPivot(int [] arr){
		
	}
}
